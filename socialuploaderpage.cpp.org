#include <MApplicationPage>
#include <MButton>
#include <QGraphicsLinearLayout>
#include <QGraphicsGridLayout>
#include <MLabel>
#include <MTextEdit>
#include <MImageWidget>
#include <QDebug>

#include "socialuploaderpage.h"
#include "photostasklet.h"

void SocialUploaderPage::createContent()
{
    MApplicationPage::createContent();
    
    MWidgetController *container = new MWidgetController();

    QGraphicsLinearLayout *layout = new QGraphicsLinearLayout(Qt::Vertical, container);
    layout->setContentsMargins(0, 0, 0, 0);
    layout->setSpacing(0);

    title = new MLabel();
    title->setObjectName("titleLabelInSocialUploaderPage");

    layout->addItem(title);
    setCentralWidget(container);
    
    MWidgetController *container2 = new MWidgetController();
    QGraphicsGridLayout *layout2 = new QGraphicsGridLayout(container2);
    layout2->setContentsMargins(0, 0, 0, 0);
    layout2->setSpacing(0);
    
    
    MWidgetController *container3 = new MWidgetController();
    gridLayout = new QGraphicsGridLayout(container3);
    gridLayout->setContentsMargins(0, 0, 0, 0);
//    gridLayout->setSpacing(0);
//    container3->setObjectName("imgGridContainer");

    MWidgetController *container4 = new MWidgetController();
    QGraphicsLinearLayout *layout4 = new QGraphicsLinearLayout(Qt::Vertical, container4);
    layout4->setContentsMargins(0, 0, 0, 10);
    layout4->setSpacing(0);



    nameLabel = new MLabel();
    nameLabel->setObjectName("nameLabelInSocialUploaderPage");
    MTextEdit *nameText = new MTextEdit();
    nameText->setObjectName("nameTextEdit");
    MButton *uploadButton = new MButton("Upload");
    MButton *cancelButton = new MButton("Cancel");

    layout4->addItem(nameLabel);
    layout4->setItemSpacing(0, 20);
    layout4->addItem(nameText);
    layout4->setItemSpacing(1, 10);
    layout4->addItem(uploadButton);
    layout4->addStretch();
    layout4->addItem(cancelButton);
    layout4->setItemSpacing(3, 10);

    layout2->setColumnFixedWidth(0, 400);
    layout2->setColumnFixedWidth(1, 400);
    layout2->addItem(container3, 0, 0);
    layout2->addItem(container4, 0, 1);
/*    layout2->addItem(container3);
    layout2->addItem(container4);
    layout2->setStretchFactor(container3, 1);
    layout2->setStretchFactor(container4, 1); */
//    qDebug() << "12345: row spacing" << layout2->rowSpacing(0);

    layout->addItem(layout2);
}

void SocialUploaderPage::setPhotos(const QStringList &photos, const QString &socialMethodName, bool isSinglePhoto)
{
    if (!isContentCreated()) {
        createContent();
    }

    for (int i = 0; i < gridLayout->count(); i++) {
        QGraphicsLayoutItem *item = gridLayout->itemAt(gridLayout->count() - 1);
        gridLayout->removeAt(gridLayout->count() - 1);
        delete item;
    }

    int numPhotos = photos.count();
    MImageWidget tmp;
    tmp.setObjectName("imgWidgetSocialUploaderPage");
    QSizeF pSize = tmp.preferredSize();
    int numImages = 8;
    if (numImages > numPhotos)
        numImages = numPhotos;
    for (int i = 0; i < numImages; i++) {
        QPixmap pix = PhotosTasklet::squareQPixmapFromPath(photos[i], pSize.width());
        MImageWidget *imgWidget = new MImageWidget(&pix);
        imgWidget->setObjectName("imgWidgetSocialUploaderPage");

        gridLayout->addItem(imgWidget, i/3, i%3);
       
    } 

    if (numPhotos > numImages) {
        int remain = numPhotos - numImages;
        QString t = QString("and %1 more photos").arg(remain);
        MLabel *remainIndicator = new MLabel();
        remainIndicator->setObjectName("remainIndicatorInSocialUploaderPage");
        remainIndicator->setWordWrap(true);
        remainIndicator->setText(t);
        gridLayout->addItem(remainIndicator, numImages/3, numImages % 3);
    }

    if (isSinglePhoto)
        nameLabel->setText("Photo name:");
    else
        nameLabel->setText("Album name:");

    title->setText("Upload to " + socialMethodName + ": " + QString("%1").arg(numPhotos) + "Photos");

}
